///************************************************
/// Generated by: TuyenNT
/// Date: 13/04/2015 09:44:48
/// Goal: Create User Service Class for MAX_SO_PHIEU_THEO_THANG
///************************************************
/// <summary>
/// Create User Service Class for MAX_SO_PHIEU_THEO_THANG
/// </summary>

using System;
using BKI_QLTTQuocAnh.DS;
using IP.Core.IPCommon;
using IP.Core.IPUserService;
using System.Data.SqlClient;
using System.Data;



namespace BKI_QLTTQuocAnh.US{

public class US_MAX_SO_PHIEU_THEO_THANG : US_Object
{
	private const string c_TableName = "MAX_SO_PHIEU_THEO_THANG";
#region "Public Properties"
	public decimal dcID 
	{
		get
		{
			return CNull.RowNVLDecimal(pm_objDR, "ID", IPConstants.c_DefaultDecimal);
		}
		set	
		{
			pm_objDR["ID"] = value;
		}
	}

	public bool IsIDNull()	{
		return pm_objDR.IsNull("ID");
	}

	public void SetIDNull() {
		pm_objDR["ID"] = System.Convert.DBNull;
	}

	public string strTHANG 
	{
		get 
		{
			return CNull.RowNVLString(pm_objDR, "THANG", IPConstants.c_DefaultString);
		}
		set 
		{
			pm_objDR["THANG"] = value;
		}
	}

	public bool IsTHANGNull() 
	{
		return pm_objDR.IsNull("THANG");
	}

	public void SetTHANGNull() {
		pm_objDR["THANG"] = System.Convert.DBNull;
	}

	public decimal dcID_LOAI_PHIEU 
	{
		get
		{
			return CNull.RowNVLDecimal(pm_objDR, "ID_LOAI_PHIEU", IPConstants.c_DefaultDecimal);
		}
		set	
		{
			pm_objDR["ID_LOAI_PHIEU"] = value;
		}
	}

	public bool IsID_LOAI_PHIEUNull()	{
		return pm_objDR.IsNull("ID_LOAI_PHIEU");
	}

	public void SetID_LOAI_PHIEUNull() {
		pm_objDR["ID_LOAI_PHIEU"] = System.Convert.DBNull;
	}

	public string strTIEN_TO_PHIEU 
	{
		get 
		{
			return CNull.RowNVLString(pm_objDR, "TIEN_TO_PHIEU", IPConstants.c_DefaultString);
		}
		set 
		{
			pm_objDR["TIEN_TO_PHIEU"] = value;
		}
	}

	public bool IsTIEN_TO_PHIEUNull() 
	{
		return pm_objDR.IsNull("TIEN_TO_PHIEU");
	}

	public void SetTIEN_TO_PHIEUNull() {
		pm_objDR["TIEN_TO_PHIEU"] = System.Convert.DBNull;
	}

	public string strMAX_SO_PHIEU 
	{
		get 
		{
			return CNull.RowNVLString(pm_objDR, "MAX_SO_PHIEU", IPConstants.c_DefaultString);
		}
		set 
		{
			pm_objDR["MAX_SO_PHIEU"] = value;
		}
	}

	public bool IsMAX_SO_PHIEUNull() 
	{
		return pm_objDR.IsNull("MAX_SO_PHIEU");
	}

	public void SetMAX_SO_PHIEUNull() {
		pm_objDR["MAX_SO_PHIEU"] = System.Convert.DBNull;
	}

	public string strGHI_CHU 
	{
		get 
		{
			return CNull.RowNVLString(pm_objDR, "GHI_CHU", IPConstants.c_DefaultString);
		}
		set 
		{
			pm_objDR["GHI_CHU"] = value;
		}
	}

	public bool IsGHI_CHUNull() 
	{
		return pm_objDR.IsNull("GHI_CHU");
	}

	public void SetGHI_CHUNull() {
		pm_objDR["GHI_CHU"] = System.Convert.DBNull;
	}

#endregion
#region "Init Functions"
	public US_MAX_SO_PHIEU_THEO_THANG() 
	{
		pm_objDS = new DS_MAX_SO_PHIEU_THEO_THANG();
		pm_strTableName = c_TableName;
		pm_objDR = pm_objDS.Tables[pm_strTableName].NewRow();
	}

	public US_MAX_SO_PHIEU_THEO_THANG(DataRow i_objDR): this()
	{
		this.DataRow2Me(i_objDR);
	}

	public US_MAX_SO_PHIEU_THEO_THANG(decimal i_dbID) 
	{
		pm_objDS = new DS_MAX_SO_PHIEU_THEO_THANG();
		pm_strTableName = c_TableName;
		IMakeSelectCmd v_objMkCmd = new CMakeAndSelectCmd(pm_objDS, c_TableName);
		v_objMkCmd.AddCondition("ID", i_dbID, eKieuDuLieu.KieuNumber, eKieuSoSanh.Bang);
		SqlCommand v_cmdSQL;
		v_cmdSQL = v_objMkCmd.getSelectCmd();
		this.FillDatasetByCommand(pm_objDS, v_cmdSQL);
		pm_objDR = getRowClone(pm_objDS.Tables[pm_strTableName].Rows[0]);
	}
#endregion

    public string SelectMaxSoPhieu(decimal ip_dc_id_loai_phieu_thu, int ip_int_thang) {
        CStoredProc v_proc = new CStoredProc("pr_find_max_so_phieu_trong_thang");
        v_proc.addDecimalInputParam("@ip_dc_id_loai_phieu", ip_dc_id_loai_phieu_thu);
        v_proc.addDecimalInputParam("@ip_int_thang", ip_int_thang);
        SqlParameter v_para = v_proc.addNVarcharOutputParam("@op_max_so_phieu", "");

        v_proc.ExecuteCommand(this);

        decimal v_temp = CIPConvert.ToDecimal(v_para.Value)+1;
        string v_cut_1_chu_so = v_temp.ToString().Substring(0, 1);
        if(CIPConvert.ToDecimal(v_cut_1_chu_so) < 10 && CIPConvert.ToDecimal(v_cut_1_chu_so) > 1) {

            return "0" + v_temp.ToString();
        }
        else if(CIPConvert.ToDecimal(v_cut_1_chu_so) == 1) {
            if(v_temp.ToString().Length < 5 ) {
                return "0" + v_temp.ToString();
            }
        }
            return v_temp.ToString();
    }
}
}
